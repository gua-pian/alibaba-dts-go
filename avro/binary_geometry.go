// Code generated by github.com/actgardner/gogen-avro. DO NOT EDIT.
/*
 * SOURCE:
 *     record.avsc
 */
package avro

import (
	"io"
	"github.com/actgardner/gogen-avro/vm/types"
	"github.com/actgardner/gogen-avro/vm"
	"github.com/actgardner/gogen-avro/compiler"
)

  
type BinaryGeometry struct {

	
	
		Type string
	

	
	
		Value []byte
	

}

func NewBinaryGeometry() (*BinaryGeometry) {
	return &BinaryGeometry{}
}

func DeserializeBinaryGeometry(r io.Reader) (*BinaryGeometry, error) {
	t := NewBinaryGeometry()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return nil, err
	}

	err = vm.Eval(r, deser, t)
	if err != nil {
		return nil, err	
	}
	return t, err
}

func DeserializeBinaryGeometryFromSchema(r io.Reader, schema string) (*BinaryGeometry, error) {
	t := NewBinaryGeometry()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return nil, err
	}

	err = vm.Eval(r, deser, t)
	if err != nil {
		return nil, err	
	}
	return t, err
}

func writeBinaryGeometry(r *BinaryGeometry, w io.Writer) error {
	var err error
	
	err = vm.WriteString( r.Type, w)
	if err != nil {
		return err			
	}
	
	err = vm.WriteBytes( r.Value, w)
	if err != nil {
		return err			
	}
	
	return err
}

func (r *BinaryGeometry) Serialize(w io.Writer) error {
	return writeBinaryGeometry(r, w)
}

func (r *BinaryGeometry) Schema() string {
	return "{\"fields\":[{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"BinaryGeometry\",\"namespace\":\"com.alibaba.dts.formats.avro\",\"type\":\"record\"}"
}

func (r *BinaryGeometry) SchemaName() string {
	return "com.alibaba.dts.formats.avro.BinaryGeometry"
}

func (_ *BinaryGeometry) SetBoolean(v bool) { panic("Unsupported operation") }
func (_ *BinaryGeometry) SetInt(v int32) { panic("Unsupported operation") }
func (_ *BinaryGeometry) SetLong(v int64) { panic("Unsupported operation") }
func (_ *BinaryGeometry) SetFloat(v float32) { panic("Unsupported operation") }
func (_ *BinaryGeometry) SetDouble(v float64) { panic("Unsupported operation") }
func (_ *BinaryGeometry) SetBytes(v []byte) { panic("Unsupported operation") }
func (_ *BinaryGeometry) SetString(v string) { panic("Unsupported operation") }
func (_ *BinaryGeometry) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *BinaryGeometry) Get(i int) types.Field {
	switch (i) {
	
	case 0:
		
		
			return (*types.String)(&r.Type)
		
	
	case 1:
		
		
			return (*types.Bytes)(&r.Value)
		
	
	}
	panic("Unknown field index")
}

func (r *BinaryGeometry) SetDefault(i int) {
	switch (i) {
	
        
	
        
	
	}
	panic("Unknown field index")
}

func (_ *BinaryGeometry) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ *BinaryGeometry) AppendArray() types.Field { panic("Unsupported operation") }
func (_ *BinaryGeometry) Finalize() { }
